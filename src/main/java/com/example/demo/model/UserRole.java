package com.example.demo.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBNativeBoolean;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.amazonaws.services.dynamodbv2.xspec.BOOL;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.apache.commons.lang3.BooleanUtils;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Getter
@Setter
@EqualsAndHashCode
@AllArgsConstructor
@NoArgsConstructor  // Default constructor is required by AWS DynamoDB SDK
@DynamoDBTable(tableName = "UserRole")
@ToString
public class UserRole {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	@DynamoDBAttribute(attributeName = "tenantId")
	private String			  tenantId;

	@DynamoDBRangeKey
	@DynamoDBAutoGeneratedKey
	@DynamoDBAttribute(attributeName = "id")
	private String			  id;

	@DynamoDBAttribute(attributeName = "name")
	private String name;

	@DynamoDBAttribute
	private Map<String,Access> scRoles = new HashMap<>();

	@DynamoDBAttribute()
	private short				userType  =  1;

	@DynamoDBAttribute
	private Map<String, Map<String,Boolean>> roles = new HashMap<>();

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd hh:mm:ss")
	@DynamoDBAttribute(attributeName = "created")
	private Date created;

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd hh:mm:ss")
	@DynamoDBAttribute(attributeName = "modified")
	private Date				modified;


	public void setCreatedAndModified() {
		this.created = new Date();
		this.modified = created;
	}

	public void setModified() {
		this.modified = new Date();
	}

		@Getter
		@Setter
		@JsonInclude(JsonInclude.Include.NON_EMPTY)
		@DynamoDBDocument
	public static class Access {
		@DynamoDBNativeBoolean
		@JsonProperty("view")
		Boolean view;

		@DynamoDBNativeBoolean
		@JsonProperty("add")
		Boolean add;

		@DynamoDBNativeBoolean
		@JsonProperty("update")
		Boolean update;

		@DynamoDBNativeBoolean
		@JsonProperty("delete")
		Boolean delete;

		@DynamoDBNativeBoolean
		@JsonProperty("isFullAccess")
		Boolean isFullAccess=false;
	}

}
